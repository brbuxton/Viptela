curl -v -X POST -d '{"j_username": "admin", "j_password": "admin"}' https://198.18.1.10/j_security_check


To Do List:

1.- Make a call with a query, for interface statistics, for instance. First make it through the apidocs, and then add it to a script.

2.- Make viptela2.py and calls2.py with all the formatting in viptela2.py

3.- Make the calls to vManage from an html page through JavaScript calls

4.- Make the calls to vManage through a script and publish the output in a spark room

5.- Make a bot in spark to receive the get requests output in spark




curl -k -c cookies.txt -v -H "Content-Type: application/x-www-form-urlencoded" -d 'j_username=admin&j_password=admin' -X POST "https://198.18.1.10/j_security_check"

curl -k -b cookies.txt -v -X GET "https://198.18.1.10/dataservice/device"


query=%7B%22query%22%3A%7B%22condition%22%3A%22AND%22%2C%22rules%22%3A%5B%7B%22value%22%3A%5B%2212%22%5D%2C%22field%22%3A%22entry_time%22%2C%22type%22%3A%22date%22%2C%22operator%22%3A%22last_n_hours%22%7D%5D%7D%7D
'''
{
    "deviceType": ["vedge-100-B"],
    "templateType": "vpn-vedge",
    "templateMinVersion": "vpn-vedge",
    "templateDefinition" : {
          "vpn-id":
  {
    "vipObjectType":"object",
    "vipType":"constant",
    "vipValue":1
  },
  "name":
  {
    "vipObjectType":"object",
    "vipType":"constant",
    "vipValue":"Tenant1",
    "vipVariableName":"vpn_name"
  },
  "ecmp-hash-key":
  {
    "layer4":
    {
      "vipObjectType":"object",
      "vipType":"ignore",
      "vipValue":"false",
      "vipVariableName":"vpn_layer4"
    }
  },
  "tcp-optimization":
  {
    "vipObjectType":"node-only",
    "vipType":"ignore",
    "vipValue":"false",
    "vipVariableName":"vpn_tcp_optimization"
  },
  "host":
  {
    "vipType":"ignore",
    "vipValue":[],
    "vipObjectType":"tree",
    "vipPrimaryKey":["hostname"]
  },
  "service":
  {
    "vipType":"ignore",
    "vipValue":[],
    "vipObjectType":"tree",
    "vipPrimaryKey":["svc-type"]
  },
  "ip":
  {
    "gre-route":{}
  },
  "ipv6":
  {
  },
  "omp":
  {
    "advertise":
    {
      "vipType":"ignore",
      "vipValue":[],
      "vipObjectType":"tree",
      "vipPrimaryKey":["protocol"]
    }
  }
    },
    "factoryDefault": false,
    "templateName": "Tenant1",
    "templateDescription": "Tenant1"
}
'''

{"query":{"condition":"AND","rules":[{"value":["3"],"field":"entry_time","type":"date","operator":"last_n_hours"}]}}

time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(1347517370))

spark token ZTc0NGIwZjMtNDdlNy00YmVjLWI5NjMtOGIxMTFjM2ZiZmMyZTMwNDk2N2YtZGQ4

boot vManage Access Token MDhiNDI3MWEtNDVkOC00OTNhLWE3ZDEtMzM1ZDExNTUzZjhkMjhmNTFjYTEtYTMx

